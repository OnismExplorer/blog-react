import React, {useEffect, useState} from "react";
import {Bath, Bed, CloudSun, Coffee, Leaf, Moon, Star, Sun} from "lucide-react";
import {useStore} from "@hooks/useStore";
import {useAppContext} from "@hooks/useAppContext";
import {Button} from "antd";
import {useNavigate} from "react-router-dom";

/**
 * ÂêéÂè∞Ê¨¢ËøéÈ°µ
 */
const Welcome: React.FC = () => {

    const store = useStore();
    const [todayDate, setTodayDate] = useState<string>();
    const {time} = useAppContext();
    const nagivate = useNavigate();

    /**
     * Ëé∑ÂèñÈóÆÂÄôËØ≠
     */
    const getGreeting = () => {
        const hour = time.getHourNumber()

        // Ê∑±Â§úÔºà0-6Ôºâ
        if (hour < 6) {
            return {
                text: "Â§úÊ∑±‰∫ÜÔºåÊó©ÁÇπ‰ºëÊÅØ",
                icon: Moon,
                // ÊñáÂ≠óÈ¢úËâ≤ÔºöÊ∏©ÊöñÁöÑÈªÑ
                textClassName: "text-yellow-400",
                // ÂõæÊ†áÈ¢úËâ≤ÔºöÁ®çÊµÖÁöÑÁÅ∞
                iconClassName: "text-gray-400",
                background: "bg-gradient-to-br from-gray-900 to-gray-800"
            }
        }
        // ‰∏äÂçàÔºà6-12Ôºâ
        if (hour < 12) {
            return {
                text: "Êó©‰∏äÂ•Ω",
                icon: CloudSun,
                // ÊñáÂ≠óÈ¢úËâ≤ÔºöÈÄâÁî®ÂÅèÊ∑±ÁöÑÊ©ôËâ≤
                textClassName: "text-orange-600",
                // ÂõæÊ†áÈ¢úËâ≤ÔºöÊüîÂíåÁöÑÈáëÈªÑËâ≤
                iconClassName: "text-yellow-500",
                // ËÉåÊôØÔºö‰ªéÊµÖÊ©ôÊ∏êÂèòÂà∞ÊµÖÈªÑ
                background: "bg-gradient-to-br from-orange-200 to-yellow-100"
            }
        }
        // ‰∏ãÂçàÔºà12-18Ôºâ
        if (hour < 18) {
            return {
                text: "‰∏ãÂçàÂ•Ω",
                icon: Sun,
                // ÊñáÂ≠óÈ¢úËâ≤ÔºöÊ∑±Ëìù
                textClassName: "text-blue-700",
                // ÂõæÊ†áÈ¢úËâ≤ÔºöÊòé‰∫ÆÁöÑÈáëÈªÑÔºåË°®Áé∞ÂçàÂêéÈò≥ÂÖâ
                iconClassName: "text-yellow-500  animate-rotate",
                // ËÉåÊôØÔºöÊµÖËìù‚ÜíÊõ¥ÊµÖËìùÔºåÊ®°ÊãüÁ©∫Êó∑ÁöÑÂçàÂêéÊô¥Á©∫
                background: "bg-gradient-to-br from-blue-200 to-blue-100"
            }
        }
        // Êôö‰∏äÔºà18-24Ôºâ
        return {
            text: "Êôö‰∏äÂ•Ω",
            icon: Moon,
            textClassName: "text-white",
            // ÂõæÊ†áÈ¢úËâ≤ÔºöÊõ¥ÊµÖÁöÑÈªÑÔºåËê•ÈÄ†ÊúàÂÖâËà¨ÂæÆÂº±Èó™ÁÉÅÊÑü
            iconClassName: "text-yellow-300",
            background: "bg-gradient-to-br from-blue-600 to-blue-400"
        }
    }


    const greeting = getGreeting();

    useEffect(() => {
        const intervalId = setInterval(() => setTodayDate(time.getTimeString('chinese') + " " + time.getWeekdayName()), 1000)
        return () => clearInterval(intervalId);
    }, [time]);


    // Ëé∑ÂèñÊ†áËØ≠
    const getSlogan = () => {
        // Ê∑±Â§ú
        if (time.getHourNumber() < 6) {
            return {text: '‰∏áÁ±Å‰ø±ÂØÇÔºåÊó©Áù°Êó©Ëµ∑~', icon: Bed, className: 'text-yellow-400'}
        }
        // ‰∏äÂçà
        if (time.getHourNumber() < 12) return {text: 'ÂáÜÂ§áÂ•ΩÂºÄÂßãÊñ∞ÁöÑ‰∏ÄÂ§©‰∫ÜÂêóÔºü', icon: Leaf, className: 'text-green-600'}
        // ‰∏ãÂçà
        if (time.getHourNumber() < 18) return {
            text: 'ÂçàÈó¥ÂÖÖÁîµÂÆåÊØïÔºå‰∏ãÂçàÁªßÁª≠Âä†Ê≤π~',
            icon: Coffee,
            className: 'text-blue-700'
        }
        // Êôö‰∏ä
        return {text: 'Â§úÂπïÈôç‰∏¥ÔºåËÅÜÂê¨Ëá™Â∑±ÂÜÖÂøÉÁöÑÂ£∞Èü≥', icon: Bath, className: 'text-white'}
    }

    const slogan = getSlogan();

    // Âø´ÈÄüÊìç‰Ωú
    const quickActions = [
        {key: '/admin/articleEdit', label: "ÂÜôÊñ∞ÊñáÁ´†", icon: "‚úçÔ∏è", color: "bg-blue-50 text-blue-700 border-blue-200"},
        {key: '/admin/main', label: "Êü•ÁúãÁªüËÆ°", icon: "üìä", color: "bg-green-50 text-green-700 border-green-200"},
        {key: '/admin/userList', label: "ÁÆ°ÁêÜÁî®Êà∑", icon: "üë•", color: "bg-purple-50 text-purple-700 border-purple-200"},
        {key: '/admin/treeHoleList', label: "Êü•ÁúãÁïôË®Ä", icon: "‚úâÔ∏è", color: "bg-yellow-50 text-yellow-700 border-yellow-200"},
        {key: '/admin/commentList', label: "ËØÑËÆ∫ÁÆ°ÁêÜ", icon: "üí¨", color: "bg-red-50 text-red-700 border-red-200"},
        {key: '/admin/resourceList', label: "ÁÆ°ÁêÜËµÑÊ∫ê", icon: "üóÇ", color: "bg-violet-50 text-violet-700 border-violet-200"},
        {key: '/admin/loveList', label: "Ë°®ÁôΩÂ¢ô", icon: "üíû", color: "bg-pink-50 text-pink-700 border-pink-200"},
        {key: '/admin/webEdit', label: "ÁΩëÁ´ôËÆæÁΩÆ", icon: "‚öôÔ∏è", color: "bg-gray-50 text-gray-700 border-gray-200"},
    ];


    return (
        <div className="flex flex-col  p-4 py-1 select-none">
            <div
                className="flex mb-12 mt-3 justify-center items-center bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] mx-auto overflow-y-auto scrollbar-none">
                {/* Â§¥ÈÉ® */}
                <div
                    className={`relative ${greeting.background} p-5 text-white rounded-t-2xl w-full flex flex-col items-center text-center`}>
                    <div className="p-1 bg-white/20 rounded-full mb-4">
                        <greeting.icon className={`w-10 h-10 ${greeting.iconClassName}`}/>
                    </div>
                    <div className={greeting.textClassName}>
                        <h1 className="text-3xl font-bold mb-2">
                            {greeting.text}Ôºå{store.state.currentAdmin.username ?? store.state.webInfo.webName}ÔºÅ
                        </h1>
                        <p className="text-base lg:text-lg mb-4">{todayDate}</p>
                        <div className="flex justify-center items-center gap-2">
                            <slogan.icon className={`w-6 h-6 ${slogan.className}`}/>
                            <span>{slogan.text}</span>
                        </div>
                    </div>
                </div>
            </div>

            {/* Âø´ÈÄüÊìç‰Ωú */}
            <section className='px-3'>
                <div className="flex items-center gap-2 mb-3">
                    <Star className="w-6 h-6 text-yellow-600 mb-3 animate-scale-1-infinite"/>
                    <h2 className="text-xl font-semibold text-fontColor">Âø´ÈÄüÊìç‰Ωú</h2>
                </div>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
                    {quickActions.map((action, index) => (
                        <Button
                            key={index}
                            onClick={() => nagivate(action.key)}
                            variant="outlined"
                            className={`h-auto p-4 flex flex-col items-center gap-2 ${action.color} hover:shadow-md transition-all`}
                        >
                            <span className="text-xl">{action.icon}</span>
                            <span className="text-sm font-medium">{action.label}</span>
                        </Button>
                    ))}
                </div>
            </section>
        </div>
    );
}

export default Welcome;
